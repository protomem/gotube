# https://taskfile.dev

version: "3"

vars:
  PROJECT: gotube

tasks:
  tidy:
    cmds:
      - go fmt ./...
      - go mod tidy

  audit:
    cmds:
      - go mod verify
      - go vet ./...
      - golangci-lint run ./...
      - govulncheck ./...
      - go test -race -buildvcs -vet=off ./...

  test:
    cmds:
      - go test -v -race -buildvcs ./...

  test/cover:
    cmds:
      - go test -v -race -buildvcs -coverprofile=/tmp/coverage.out ./...
      - go tool cover -html=/tmp/coverage.out

  ci:
    cmds:
      - task: tidy
      - task: audit
      - task: test

  build/app/local:
    cmds:
      - go build -v -o /tmp/{{.PROJECT}}/api-server ./cmd/api-server

  run/app/local:
    deps: [build/local]
    vars:
      conf_file: '{{.conf_file | default "./configs/local.env"}}'
    cmds:
      - /tmp/{{.PROJECT}}/api-server -conf {{.conf_file}}

  run/web/local:
    dir: ./web
    cmds:
      - npm run dev

  run/app/stage:
    deps: []
    cmds:
      - docker compose -p {{.PROJECT}}-app -f ./build/app.docker-compose.yml up -d

  stop/app/stage:
    cmds:
      - docker compose -p {{.PROJECT}}-app -f ./build/app.docker-compose.yml down

  run/web/stage:
    cmds:
      - docker compose -p {{.PROJECT}}-web -f ./build/web.docker-compose.yml up -d

  stop/web/stage:
    cmds:
      - docker compose -p {{.PROJECT}}-web -f ./build/web.docker-compose.yml down

  run/infra:
    cmds:
      - docker compose -p {{.PROJECT}}-infra -f ./build/infra.docker-compose.yml up -d

  stop/infra:
    cmds:
      - docker compose -p {{.PROJECT}}-infra -f ./build/infra.docker-compose.yml down
  
  migrate/new:
    cmds:
      - migrate create -ext sql -dir ./assets/migrations -seq {{.name}}

  migrate/up:
    cmds:
      - migrate -path ./assets/migrations -database "postgres://{{.db_dsn}}" up

  migrate/down:
    cmds:
      - migrate -path ./assets/migrations -database "postgres://{{.db_dsn}}" down

  migrate/goto:
    cmds:
      - migrate -path ./assets/migrations -database "postgres://{{.db_dsn}}" goto {{.version}}

  migrate/force:
    cmds:
      - migrate -path ./assets/migrations -database "postgres://{{.db_dsn}}" force {{.version}}

  migrate/version:
    cmds:
      - migrate -path ./assets/migrations -database "postgres://{{.db_dsn}}" version
